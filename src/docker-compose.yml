name: tiklabchallenge

services:
  tiklabchallenge.api:
    image: ${DOCKER_REGISTRY-}tiklabchallengeapi
    build:
      context: .
      dockerfile: TiklabChallenge.API/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://otlp-gateway-prod-ap-southeast-1.grafana.net/otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_HEADERS=Authorization=Basic MTM1OTQyOTpnbGNfZXlKdklqb2lNVFV4T1RZME1pSXNJbTRpT2lKemRHRmpheTB4TXpVNU5ESTVMVzkwYkhBdGQzSnBkR1V0WjNKaFptRnVZU0lzSW1zaU9pSlFOREpQTURSWFVuVTBNMEl3WlRWdVQwdEZURFU1YW5ZaUxDSnRJanA3SW5JaU9pSndjbTlrTFdGd0xYTnZkWFJvWldGemRDMHhJbjE5
    networks:
      - productnetwork
    restart: on-failure

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ticklab-challenge
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - productnetwork

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - productnetwork
    restart: on-failure

networks:
  productnetwork:

volumes:
  pgdata:
    name: tiklabchallenge_pgdata
